---
- hosts: localhost

  environment:
    KUBECONFIG: "files/kubeconfig"

  pre_tasks:
  # create kubeconfig
    - copy:
        dest: "files/kubeconfig"
        content: "{{ lookup('env', 'KUBECONFIG_BASE64') | b64decode }}"
  # # create docker config.json
  #   - copy:
  #       dest: "files/config.json"
  #       content: "{{ lookup('env', 'DOCKERCONFIG_BASE64') | b64decode }}" 
  # read config from environment variables
    - set_fact:
        central_port: "{{ lookup('env', 'CENTRAL_PORT') | default('443', True) }}"
        original_central_addr: "{{ lookup('env', 'CENTRAL_ADDR') }}"
        central_addr: "{{ lookup('env', 'CENTRAL_ADDR') }}"
        f_stackrox_admin_password: "{{ lookup('env', 'ADMIN_PASSWORD') }}"
        orchestrator: "{{ lookup('env', 'ORCHESTRATOR') }}"
        kubeconfig: "files/kubeconfig"
        auth_client_id: "{{ lookup('env', 'AUTH_CLIENT_ID') }}"
        auth_domain: "{{ lookup('env', 'AUTH_DOMAIN') }}"
        stackrox_license: "{{ lookup('env', 'STACKROX_LICENSE') }}"
        ocp4_workload_stackrox_central_imagepulluser: "{{ lookup('env', 'IMAGE_PULL_USER') }}"
        ocp4_workload_stackrox_central_imagepullpassword: "{{ lookup('env', 'IMAGE_PULL_PASSWORD') }}"
        imageregistry: "{{ lookup('env', 'IMAGE_REGISTRY') | default('', True) }}"
        platformplus: "{{ lookup('env', 'PLATFORM_PLUS') | default('', True) }}"
        ACTION: "create"
        ocp4_workload_pipelines_use_catalog_snapshot: true
        ocp4_workload_rhacm_use_catalog_snapshot: true
        ocp4_workload_rhacm_catalog_source_image: "quay.io/gpte-devops-automation/olm_snapshot_acm_redhat_catalog"
        ocp4_workload_rhacm_catalog_source_tag: "v4.5_2020_09_25"
        ocp4_workload_rhacm_acm_release: "release-2.0"
        ocp4_workload_rhacm_acm_csv: "advanced-cluster-management.v2.0.3"
        ocp4_workload_authentication_idm_type: htpasswd
        ocp4_workload_authentication_htpasswd_user_base: user
        ocp4_workload_authentication_htpasswd_user_password: openshift
        ocp4_workload_authentication_htpasswd_user_count: 10
        ocp4_workload_authentication_admin_user: admin
        ocp4_workload_authentication_remove_kubeadmin: true
        ansible_user: lab-user
        cloud_provider: none
        output_dir: "/tmp"

    - name: Installing on k8s
      set_fact:
        orchestrator_tool: kubectl
      when:
        orchestrator == "k8s"
    - name: Installing on OpenShift
      set_fact:
        orchestrator_tool: oc
      when:
        orchestrator == "openshift"
    
  tasks:
    # - import_role:
    #     name: studentvm_ocp4
    #     # install Helm
    #   when:
    #     platformplus == True
    # - import_role:
    #     name: ocp4_workload_authentication
    #     # add OpenShift users
    #   when:
    #     platformplus == True
    - debug:
        var: ACTION
    - import_role:
        name: ocp4_workload_rhacm
        # install ACM
      when:
        platformplus == True
    - import_role:
        name: ocp4_workload_pipelines
        # install Pipelines
      when:
        platformplus == True
    - import_role:
        name: ocp4_workload_stackrox_central
      when:
        original_central_addr == ""
    - import_role:
        name: ocp4_workload_stackrox_sensor
      when:
        original_central_addr == ""
    - import_role:
        name: ocp4_workload_stackrox_demo_apps
    - import_role:
        name: ocp4_workload_stackrox_demo_pipeline
      when:
        orchestrator == "openshift"

  post_tasks:
    - name: find /tmp files 
      find:
        paths: /tmp
      